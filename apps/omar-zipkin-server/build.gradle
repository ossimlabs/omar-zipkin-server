buildscript {
  if(System.env.OMAR_COMMON_PROPERTIES)
  {
      apply from: System.env.OMAR_COMMON_PROPERTIES
  }
 
	ext {
		springBootVersion = "${springBootV}"
     baseImage = "omar-base"
     dockerStatementsOverride = {
       [
          "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",
	  """ENV SPRING_CLOUD_CONFIG_ENABLED=true \\
	SPRING_CLOUD_DISCOVERY_ENABLED=true""",
          "COPY ${project.name}-${buildVersion}-${buildVersionTag}.jar /home/omar",
          "EXPOSE 9411",
         "WORKDIR /home/omar",
         "CMD java -server -Xms256m -Xmx1024m -Djava.awt.headless=true -XX:+CMSClassUnloadingEnabled -XX:+UseGCOverheadLimit -XX:+UnlockExperimentalVMOptions  -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -Djava.security.egd=file:/dev/./urandom -jar /home/omar/${project.name}-${buildVersion}-${buildVersionTag}.jar"
       ]
     }
	}
  repositories {
      mavenLocal()
      maven { url "${ossimMavenProxy}" }
      mavenCentral()
   }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "maven"
group "io.ossim.omar.apps"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenLocal()
  maven { url "${ossimMavenProxy}" }
  mavenCentral()
}


dependencies {

    compile "de.codecentric:spring-boot-admin-starter-client:${springBootAdminStarterClientV}"

    compile('org.codehaus.groovy:groovy')
    compile('io.zipkin.java:zipkin-server')
    compile('io.zipkin.java:zipkin-autoconfigure-ui')
    compile('io.zipkin.java:zipkin-ui')
    compile "org.springframework.cloud:spring-cloud-starter-config"
    testCompile('org.springframework.boot:spring-boot-starter-test')

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependencyV}"
	}
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}
